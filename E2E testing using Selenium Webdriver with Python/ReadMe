E2E testing using Selenium Webdriver with Python


This project utilizes Selenium WebDriver in conjunction with Python to perform end-to-end testing on an e-commerce practice website. The testing is structured into two main parts: the first part focuses on validating the homepage data, while the second part tests the end-to-end process of purchasing products.

Key Features: 

Pytest Testing Framework: The project is built upon the Pytest framework, offering robust features for efficient testing and reporting.

Fixtures: Browser setup and teardown functionalities are encapsulated in fixtures within the conftest.py file, ensuring consistency and reusability across tests.

BaseClass for Common Utilities: A BaseClass has been implemented to centralize common utilities such as logging mechanisms and static dropdown handling, promoting code maintainability and readability.

Page Object Model (POM): The project follows the Page Object Model design pattern to separate test logic from web elements, enhancing test maintenance and readability.

Logging Integration: Comprehensive logging features are integrated into the framework tests, providing detailed insights into test execution. 

Excel Data-Driven Testing: Utilizing Pyxl, the framework supports data-driven testing using Excel spreadsheets, facilitating parameterization and scalability of tests.

This repository serves as a practical demonstration of utilizing Selenium WebDriver with Python for automated end-to-end testing scenarios. By implementing best practices such as POM, reusable fixtures, and comprehensive logging, this project aims to streamline testing processes and improve overall test reliability and maintainability. 


